{"version":3,"sources":["hooks.js","authorization.js","repository.js","constants.js","styleComponents.js","utils.js","LineItem.js","Account.js","App.js","serviceWorker.js","index.js"],"names":["useLocalStorage","key","initialValue","arguments","length","undefined","_useState","useState","item","localStorage","getItem","JSON","parse","error","_useState2","Object","slicedToArray","value","setValue","val","setItem","stringify","console","log","accessToken","apiServer","getResource","resource","axios","get","concat","headers","Authorization","Access-Control-Allow-Origin","getAccounts","_ref","asyncToGenerator","regenerator_default","a","mark","_callee2","accountsResp","accounts","positions","balances","wrap","_context2","prev","next","sent","data","Promise","all","map","_ref2","_callee","account","_ref3","_ref4","positionsResp","balancesResp","_context","number","find","combinedBalances","currency","sortBy","position","currentMarketValue","stop","_x","apply","this","abrupt","totalEquity","getSymbols","_ref5","_callee3","symbolIDs","symbols","quotes","_ref6","_ref7","symbolsResp","quotesResp","_context3","join","forEach","id","symbolId","_x2","BREAKDOWNS","VEQT.TO","stocks","bonds","VGRO.TO","VBAL.TO","Subheading","styled","div","_templateObject","Flex","_templateObject2","SecondaryText","_templateObject3","formatMoney","num","Math","round","toFixed","replace","LineItem","label","amount","total","react_default","createElement","style","marginBottom","alignItems","width","textAlign","Heading","h2","Account_templateObject","Account","balance","postTaxAdjustment","sumBy","symbol","cash","type","src_LineItem","search","window","location","hash","substring","hashObject","decodeURIComponent","access_token","api_server","initializeAPI","Container","App_templateObject","Options","App_templateObject2","Total","h1","App_templateObject3","App","_useLocalStorage","_useLocalStorage2","isPostTax","setIsPostTax","_useLocalStorage3","_useLocalStorage4","setAccounts","_useLocalStorage5","_useLocalStorage6","setBalances","_useLocalStorage7","_useLocalStorage8","setPositions","_useLocalStorage9","_useLocalStorage10","setSymbols","_useLocalStorage11","_useLocalStorage12","setQuotes","useEffect","fetchData","uniq","flatten","values","href","rrspAccountNumbers","filter","rrspPositions","flatMap","pickBy","v","k","includes","nonRrspPositions","omitBy","rrspBalances","nonRrspBalances","rrspStocks","nonRrspStocks","rrspBonds","nonRrspBonds","rrspCash","nonRrspCash","overallTotal","checked","onChange","src_Account","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gSAEaA,EAAkB,SAACC,GAA6B,IAAxBC,EAAwBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,KAASG,EACjCC,mBAAS,WACjC,IACE,IAAMC,EAAOC,aAAaC,QAAQT,GAClC,OAAOO,EAAOG,KAAKC,MAAMJ,GAAQN,EACjC,MAAOW,GACP,OAAOX,KANgDY,EAAAC,OAAAC,EAAA,EAAAD,CAAAT,EAAA,GACpDW,EADoDH,EAAA,GAC7CI,EAD6CJ,EAAA,GAmB3D,MAAO,CAACG,EATiB,SAAAE,GACvB,IACED,EAASC,GACTV,aAAaW,QAAQnB,EAAKU,KAAKU,UAAUF,IACzC,MAAON,GACPS,QAAQC,IAAIV,OCjBPW,EAAc,KACdC,EAAY,wDCIjBC,EAAc,SAAAC,GAAQ,OAC1BC,IAAMC,IAAN,uCAAAC,OAAiDL,EAAjD,OAAAK,OAAgEH,GAAY,CAC1EI,QAAS,CACPC,cAAa,UAAAF,OAAYN,GACzBS,8BAA+B,QAIxBC,EAAW,eAAAC,EAAApB,OAAAqB,EAAA,EAAArB,CAAAsB,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACEtB,EAAY,YADd,cACnBe,EADmBK,EAAAG,KAEnBP,EAAWD,EAAaS,KAAKR,SAE7BC,EAAY,GACZC,EAAW,GALQE,EAAAE,KAAA,EAOnBG,QAAQC,IACZV,EAASW,IAAT,eAAAC,EAAAvC,OAAAqB,EAAA,EAAArB,CAAAsB,EAAAC,EAAAC,KAAa,SAAAgB,EAAMC,GAAN,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAvB,EAAAC,EAAAO,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACiCG,QAAQC,IAAI,CACtD1B,EAAW,YAAAI,OAAa0B,EAAQM,OAArB,eACXpC,EAAW,YAAAI,OAAa0B,EAAQM,OAArB,gBAHF,OAAAL,EAAAI,EAAAZ,KAAAS,EAAA3C,OAAAC,EAAA,EAAAD,CAAA0C,EAAA,GACJE,EADID,EAAA,GACWE,EADXF,EAAA,GAMXd,EAASY,EAAQM,QAAUC,IAAKH,EAAaV,KAAKc,iBAAkB,CAClEC,SAAU,QAEZtB,EAAUa,EAAQM,QAAUI,IAC1BP,EAAcT,KAAKP,UACnB,SAAAwB,GAAQ,OAAKA,EAASC,qBAXb,wBAAAP,EAAAQ,SAAAd,MAAb,gBAAAe,GAAA,OAAAhB,EAAAiB,MAAAC,KAAArE,YAAA,KARuB,cAAA2C,EAAA2B,OAAA,SAwBlB,CACL/B,SAAUwB,IACRxB,EACA,SAAAc,GAAO,OAAKZ,EAASY,EAAQM,QAAQY,cAEvC9B,WACAD,cA9BuB,wBAAAG,EAAAuB,SAAA7B,MAAH,yBAAAL,EAAAoC,MAAAC,KAAArE,YAAA,GAkCXwE,EAAU,eAAAC,EAAA7D,OAAAqB,EAAA,EAAArB,CAAAsB,EAAAC,EAAAC,KAAG,SAAAsC,EAAMC,GAAN,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA/C,EAAAC,EAAAO,KAAA,SAAAwC,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,cAClB+B,EAAU,GACVC,EAAS,GAFSK,EAAArC,KAAA,EAIgBG,QAAQC,IAAI,CAClD1B,EAAW,eAAAI,OAAgBgD,EAAUQ,KAAK,OAC1C5D,EAAW,sBAAAI,OAAuBgD,EAAUQ,KAAK,SAN3B,cAAAL,EAAAI,EAAApC,KAAAiC,EAAAnE,OAAAC,EAAA,EAAAD,CAAAkE,EAAA,GAIjBE,EAJiBD,EAAA,GAIJE,EAJIF,EAAA,GASxBJ,EAAUS,QAAQ,SAAAC,GAChBT,EAAQS,GAAMzB,IAAKoB,EAAYjC,KAAK6B,QAAS,CAAEU,SAAUD,IACzDR,EAAOQ,GAAMzB,IAAKqB,EAAWlC,KAAK8B,OAAQ,CAAES,SAAUD,MAXhCH,EAAAZ,OAAA,SAcjB,CAAEM,UAASC,WAdM,yBAAAK,EAAAhB,SAAAQ,MAAH,gBAAAa,GAAA,OAAAd,EAAAL,MAAAC,KAAArE,YAAA,GC/CVwF,EAAa,CACxBC,UAAW,CACTC,OAAQ,EACRC,MAAO,GAETC,UAAW,CACTF,OAAQ,GACRC,MAAO,IAETE,UAAW,CACTH,OAAQ,GACRC,MAAO,yfCTJ,IAAMG,EAAaC,IAAOC,IAAVC,KAUVC,EAAOH,IAAOC,IAAVG,KAKJC,EAAgBL,IAAOC,IAAVK,KCjBbC,EAAc,SAAAC,GAAG,MAC5B,IACAC,KAAKC,MAAMF,GACRG,QAAQ,GACRC,QAAQ,wBAAyB,MCcvBC,EAdE,SAAA5E,GAAA,IAAG6E,EAAH7E,EAAG6E,MAAOC,EAAV9E,EAAU8E,OAAQC,EAAlB/E,EAAkB+E,MAAlB,OACfC,EAAA7E,EAAA8E,cAACf,EAAD,CAAMgB,MAAO,CAAEC,aAAc,IAC3BH,EAAA7E,EAAA8E,cAAA,WACED,EAAA7E,EAAA8E,cAAA,WAAMJ,IAERG,EAAA7E,EAAA8E,cAACf,EAAD,CAAMgB,MAAO,CAAEE,WAAY,aACzBJ,EAAA7E,EAAA8E,cAAA,WAAMX,EAAYQ,IAClBE,EAAA7E,EAAA8E,cAACb,EAAD,CAAec,MAAO,CAAEG,MAAO,GAAIC,UAAW,WAC7BR,EAASC,EDNW,KAAKL,QAAQ,GAAK,4HEC7D,IAAMa,EAAUxB,IAAOyB,GAAVC,KAyCEC,EApCC,SAAA1F,GAAwD,IAArDqB,EAAqDrB,EAArDqB,QAASsE,EAA4C3F,EAA5C2F,QAASnF,EAAmCR,EAAnCQ,UAAWoF,EAAwB5F,EAAxB4F,kBACxClC,EACJmC,IACErF,EACA,SAAAwB,GAAQ,OACNA,EAASC,mBAAqBuB,EAAWxB,EAAS8D,QAAQpC,SAC1DkC,EACAjC,EACJkC,IACErF,EACA,SAAAwB,GAAQ,OACNA,EAASC,mBAAqBuB,EAAWxB,EAAS8D,QAAQnC,QAC1DiC,EACAG,EAAOJ,EAAQI,KAAOH,EACtBb,EAAQrB,EAASC,EAAQoC,EAE/B,OACEf,EAAA7E,EAAA8E,cAAA,OAAKnH,IAAKuD,EAAQM,QAChBqD,EAAA7E,EAAA8E,cAACM,EAAD,KAAUlE,EAAQ2E,MAClBhB,EAAA7E,EAAA8E,cAACnB,EAAD,sBACAkB,EAAA7E,EAAA8E,cAACgB,EAAD,CAAUpB,MAAM,SAASC,OAAQpB,EAAQqB,MAAOA,IAChDC,EAAA7E,EAAA8E,cAACgB,EAAD,CAAUpB,MAAM,QAAQC,OAAQnB,EAAOoB,MAAOA,IAC9CC,EAAA7E,EAAA8E,cAACgB,EAAD,CAAUpB,MAAM,OAAOC,OAAQiB,EAAMhB,MAAOA,IAC5CC,EAAA7E,EAAA8E,cAACnB,EAAD,kBACCtD,EAAUU,IAAI,SAAAc,GAAQ,OACrBgD,EAAA7E,EAAA8E,cAACgB,EAAD,CACEnI,IAAKkE,EAAS8D,OACdjB,MAAO7C,EAAS8D,OAChBhB,OAAQ9C,EAASC,mBAAqB2D,EACtCb,MAAOA,EAAQgB,+UNtCI,WAC3B,IAAMG,EAASC,OAAOC,SAASC,KAC5BC,UAAU,GACV3B,QAAQ,KAAM,OACdA,QAAQ,KAAM,OAEjB,GAAKuB,EAAL,CAIA,IAAMK,EAAa/H,KAAKC,MAAM,KAAOyH,EAAS,KAAM,SAACpI,EAAKgB,GAAN,MAC1C,KAARhB,EAAagB,EAAQ0H,mBAAmB1H,KAG1CO,EAAckH,EAAWE,aACzBnH,EAAYiH,EAAWG,YOIzBC,GAEA,IAAMC,EAAY7C,IAAOC,IAAV6C,KAITC,EAAU/C,IAAOC,IAAV+C,KAIPC,GAAQjD,IAAOkD,GAAVC,KAsJIC,GAhJH,WAAM,IAAAC,EACkBvJ,EAAgB,qBAAqB,GADvDwJ,EAAAzI,OAAAC,EAAA,EAAAD,CAAAwI,EAAA,GACTE,EADSD,EAAA,GACEE,EADFF,EAAA,GAAAG,EAEgB3J,EAAgB,oBAAqB,MAFrD4J,EAAA7I,OAAAC,EAAA,EAAAD,CAAA4I,EAAA,GAETjH,EAFSkH,EAAA,GAECC,EAFDD,EAAA,GAAAE,EAGgB9J,EAAgB,oBAAqB,IAHrD+J,EAAAhJ,OAAAC,EAAA,EAAAD,CAAA+I,EAAA,GAGTlH,EAHSmH,EAAA,GAGCC,EAHDD,EAAA,GAAAE,EAIkBjK,EAAgB,qBAAsB,IAJxDkK,EAAAnJ,OAAAC,EAAA,EAAAD,CAAAkJ,EAAA,GAITtH,EAJSuH,EAAA,GAIEC,EAJFD,EAAA,GAAAE,EAKcpK,EAAgB,mBAAoB,IALlDqK,EAAAtJ,OAAAC,EAAA,EAAAD,CAAAqJ,EAAA,GAKTrF,EALSsF,EAAA,GAKAC,EALAD,EAAA,GAAAE,EAMYvK,EAAgB,kBAAmB,IAN/CwK,EAAAzJ,OAAAC,EAAA,EAAAD,CAAAwJ,EAAA,GAMTvF,EANSwF,EAAA,GAMDC,EANCD,EAAA,GA8BhB,GAtBAE,oBAAU,WACR,IAAMC,EAAS,eAAAxI,EAAApB,OAAAqB,EAAA,EAAArB,CAAAsB,EAAAC,EAAAC,KAAG,SAAAgB,IAAA,IAAAD,EAAAZ,EAAAE,EAAAD,EAAAmC,EAAArB,EAAAsB,EAAAC,EAAA,OAAA3C,EAAAC,EAAAO,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACgCd,IADhC,cAAAoB,EAAAO,EAAAZ,KACRP,EADQY,EACRZ,SAAUE,EADFU,EACEV,SAAUD,EADZW,EACYX,UAEtBmC,EAAY8F,IAChBC,IAAQ9J,OAAO+J,OAAOnI,IAAYU,IAAI,SAAAc,GAAQ,OAAIA,EAASsB,YAJ7C5B,EAAAb,KAAA,EAOkB2B,EAAWG,GAP7B,OAAArB,EAAAI,EAAAZ,KAOR8B,EAPQtB,EAORsB,QAASC,EAPDvB,EAOCuB,OAEjBsF,EAAWvF,GACX0F,EAAUzF,GACVmF,EAAaxH,GACbqH,EAAYpH,GACZiH,EAAYnH,GAbI,yBAAAmB,EAAAQ,SAAAd,MAAH,yBAAApB,EAAAoC,MAAAC,KAAArE,YAAA,GAgBVuC,GACHiI,KAED,KAEEjI,EACH,OACEyE,EAAA7E,EAAA8E,cAAA,KACE2D,KAAI,0DAAAjJ,OAtDM,iCAsDN,sCAAAA,OArDS,kDAoDf,aAQJ,IAIMkJ,EAAqBtI,EACxBuI,OAAO,SAAAzH,GAAO,MAAqB,SAAjBA,EAAQ2E,OAC1B9E,IAAI,SAAAG,GAAO,OAAIA,EAAQM,SACpBoH,EAAgBC,IACpBpK,OAAO+J,OAAOM,IAAOzI,EAAW,SAAC0I,EAAGC,GAAJ,OAAUN,EAAmBO,SAASD,OAElEE,EAAmBL,IACvBpK,OAAO+J,OAAOW,IAAO9I,EAAW,SAAC0I,EAAGC,GAAJ,OAAUN,EAAmBO,SAASD,OAElEI,EAAe3K,OAAO+J,OAC1BM,IAAOxI,EAAU,SAACyI,EAAGC,GAAJ,OAAUN,EAAmBO,SAASD,MAEnDK,EAAkB5K,OAAO+J,OAC7BW,IAAO7I,EAAU,SAACyI,EAAGC,GAAJ,OAAUN,EAAmBO,SAASD,MAGnDvD,EAAoB0B,EAAY,GAAqB,EAErDmC,EACJ5D,IACEkD,EACA,SAAA/G,GAAQ,OACNA,EAASC,mBAAqBuB,EAAWxB,EAAS8D,QAAQpC,SAC1DkC,EACA8D,EAAgB7D,IACpBwD,EACA,SAAArH,GAAQ,OAAIA,EAASC,mBAAqBuB,EAAWxB,EAAS8D,QAAQpC,SAElEiG,EACJ9D,IACEkD,EACA,SAAA/G,GAAQ,OACNA,EAASC,mBAAqBuB,EAAWxB,EAAS8D,QAAQnC,QAC1DiC,EACAgE,GAAe/D,IACnBwD,EACA,SAAArH,GAAQ,OAAIA,EAASC,mBAAqBuB,EAAWxB,EAAS8D,QAAQnC,QAElEkG,GAAWhE,IAAM0D,EAAc,QAAU3D,EACzCkE,GAAcjE,IAAM2D,EAAiB,QACrCO,GACJN,EACAC,EACAC,EACAC,GACAC,GACAC,GAEF,OACE9E,EAAA7E,EAAA8E,cAAC2B,EAAD,KACE5B,EAAA7E,EAAA8E,cAAC6B,EAAD,KACE9B,EAAA7E,EAAA8E,cAAA,aACED,EAAA7E,EAAA8E,cAAA,SAAOe,KAAK,WAAWgE,QAAS1C,EAAW2C,SAxD7B,WACpB1C,GAAcD,MAuD+D,IADzE,gCAKFtC,EAAA7E,EAAA8E,cAAC+B,GAAD,KAAQ1C,EAAYyF,KACpB/E,EAAA7E,EAAA8E,cAACnB,EAAD,iBACCvD,EAASW,IAAI,SAAAG,GAAO,OACnB2D,EAAA7E,EAAA8E,cAACgB,EAAD,CACEnI,IAAKuD,EAAQM,OACbkD,MAAOxD,EAAQ2E,KACflB,OACErE,EAASY,EAAQM,QAAQY,aACP,SAAjBlB,EAAQ2E,KAAkBJ,EAAoB,GAEjDb,MAAOgF,OAGX/E,EAAA7E,EAAA8E,cAACnB,EAAD,sBACAkB,EAAA7E,EAAA8E,cAACgB,EAAD,CACEpB,MAAM,SACNC,OAAQ2E,EAAaC,EACrB3E,MAAOgF,KAET/E,EAAA7E,EAAA8E,cAACgB,EAAD,CACEpB,MAAM,QACNC,OAAQ6E,EAAYC,GACpB7E,MAAOgF,KAET/E,EAAA7E,EAAA8E,cAACgB,EAAD,CACEpB,MAAM,OACNC,OAAQ+E,GAAWC,GACnB/E,MAAOgF,KAERxJ,EAASW,IAAI,SAAAG,GAAO,OACnB2D,EAAA7E,EAAA8E,cAACiF,EAAD,CACEpM,IAAKuD,EAAQM,OACbN,QAASA,EACTsE,QAASlF,EAASY,EAAQM,QAC1BnB,UAAWA,EAAUa,EAAQM,QAC7BiE,kBAAoC,SAAjBvE,EAAQ2E,KAAkBJ,EAAoB,EACjEhD,QAASA,EACTC,OAAQA,QCnKEsH,QACW,cAA7BhE,OAAOC,SAASgE,UAEe,UAA7BjE,OAAOC,SAASgE,UAEhBjE,OAAOC,SAASgE,SAASC,MACvB,2DCZNC,IAASC,OAAOvF,EAAA7E,EAAA8E,cAACuF,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b50995b3.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport const useLocalStorage = (key, initialValue = null) => {\n  const [value, setValue] = useState(() => {\n    try {\n      const item = localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setAndStoreValue = val => {\n    try {\n      setValue(val);\n      localStorage.setItem(key, JSON.stringify(val));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [value, setAndStoreValue];\n};\n","export let accessToken = null;\nexport let apiServer = null;\n\nexport const initializeAPI = () => {\n  const search = window.location.hash\n    .substring(1)\n    .replace(/&/g, '\",\"')\n    .replace(/=/g, '\":\"');\n\n  if (!search) {\n    return;\n  }\n\n  const hashObject = JSON.parse('{\"' + search + '\"}', (key, value) =>\n    key === \"\" ? value : decodeURIComponent(value)\n  );\n\n  accessToken = hashObject.access_token;\n  apiServer = hashObject.api_server;\n\n  // window.location.hash = \"\";\n};\n","import axios from \"axios\";\nimport find from \"lodash/find\";\nimport sortBy from \"lodash/sortBy\";\nimport { accessToken, apiServer } from \"./authorization\";\n\nconst getResource = resource =>\n  axios.get(`https://cors-anywhere.herokuapp.com/${apiServer}v1/${resource}`, {\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n      \"Access-Control-Allow-Origin\": \"*\"\n    }\n  });\n\nexport const getAccounts = async () => {\n  const accountsResp = await getResource(\"accounts\");\n  const accounts = accountsResp.data.accounts;\n\n  const positions = {};\n  const balances = {};\n\n  await Promise.all(\n    accounts.map(async account => {\n      const [positionsResp, balancesResp] = await Promise.all([\n        getResource(`accounts/${account.number}/positions`),\n        getResource(`accounts/${account.number}/balances`)\n      ]);\n\n      balances[account.number] = find(balancesResp.data.combinedBalances, {\n        currency: \"CAD\"\n      });\n      positions[account.number] = sortBy(\n        positionsResp.data.positions,\n        position => -position.currentMarketValue\n      );\n    })\n  );\n\n  return {\n    accounts: sortBy(\n      accounts,\n      account => -balances[account.number].totalEquity\n    ),\n    balances,\n    positions\n  };\n};\n\nexport const getSymbols = async symbolIDs => {\n  const symbols = {};\n  const quotes = {};\n\n  const [symbolsResp, quotesResp] = await Promise.all([\n    getResource(`symbols?ids=${symbolIDs.join(\",\")}`),\n    getResource(`markets/quotes?ids=${symbolIDs.join(\",\")}`)\n  ]);\n\n  symbolIDs.forEach(id => {\n    symbols[id] = find(symbolsResp.data.symbols, { symbolId: id });\n    quotes[id] = find(quotesResp.data.quotes, { symbolId: id });\n  });\n\n  return { symbols, quotes };\n};\n","export const BREAKDOWNS = {\n  \"VEQT.TO\": {\n    stocks: 1,\n    bonds: 0\n  },\n  \"VGRO.TO\": {\n    stocks: 0.8,\n    bonds: 0.2\n  },\n  \"VBAL.TO\": {\n    stocks: 0.6,\n    bonds: 0.4\n  }\n};\n","import styled from \"styled-components\";\n\nexport const Subheading = styled.div`\n  font-weight: bold;\n  font-size: 12px;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  border-bottom: 1px solid #ddd;\n  margin-bottom: 5px;\n  margin-top: 15px;\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const SecondaryText = styled.div`\n  line-height: 16px;\n  font-size: 12px;\n  color: #666;\n`;\n","export const formatMoney = num =>\n  \"$\" +\n  Math.round(num)\n    .toFixed(0)\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\nexport const formatPercent = num => (num * 100).toFixed(1) + \"%\";\n","import React from \"react\";\nimport { Flex, SecondaryText } from \"./styleComponents\";\nimport { formatMoney, formatPercent } from \"./utils\";\n\nconst LineItem = ({ label, amount, total }) => (\n  <Flex style={{ marginBottom: 3 }}>\n    <div>\n      <div>{label}</div>\n    </div>\n    <Flex style={{ alignItems: \"baseline\" }}>\n      <div>{formatMoney(amount)}</div>\n      <SecondaryText style={{ width: 50, textAlign: \"right\" }}>\n        {formatPercent(amount / total)}\n      </SecondaryText>\n    </Flex>\n  </Flex>\n);\n\nexport default LineItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport sumBy from \"lodash/sumBy\";\nimport { BREAKDOWNS } from \"./constants\";\nimport { Subheading } from \"./styleComponents\";\nimport LineItem from \"./LineItem\";\n\nconst Heading = styled.h2`\n  margin-top: 30px;\n  margin-bottom: 10px;\n`;\n\nconst Account = ({ account, balance, positions, postTaxAdjustment }) => {\n  const stocks =\n    sumBy(\n      positions,\n      position =>\n        position.currentMarketValue * BREAKDOWNS[position.symbol].stocks\n    ) * postTaxAdjustment;\n  const bonds =\n    sumBy(\n      positions,\n      position =>\n        position.currentMarketValue * BREAKDOWNS[position.symbol].bonds\n    ) * postTaxAdjustment;\n  const cash = balance.cash * postTaxAdjustment;\n  const total = stocks + bonds + cash;\n\n  return (\n    <div key={account.number}>\n      <Heading>{account.type}</Heading>\n      <Subheading>Asset Classes</Subheading>\n      <LineItem label=\"Stocks\" amount={stocks} total={total} />\n      <LineItem label=\"Bonds\" amount={bonds} total={total} />\n      <LineItem label=\"Cash\" amount={cash} total={total} />\n      <Subheading>Positions</Subheading>\n      {positions.map(position => (\n        <LineItem\n          key={position.symbol}\n          label={position.symbol}\n          amount={position.currentMarketValue * postTaxAdjustment}\n          total={total - cash}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Account;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport flatMap from \"lodash/flatMap\";\nimport flatten from \"lodash/flatten\";\nimport omitBy from \"lodash/omitBy\";\nimport pickBy from \"lodash/pickBy\";\nimport sumBy from \"lodash/sumBy\";\nimport uniq from \"lodash/uniq\";\nimport { useLocalStorage } from \"./hooks\";\nimport { initializeAPI } from \"./authorization\";\nimport { getAccounts, getSymbols } from \"./repository\";\nimport { BREAKDOWNS } from \"./constants\";\nimport Account from \"./Account\";\nimport { Subheading } from \"./styleComponents\";\nimport { formatMoney } from \"./utils\";\nimport LineItem from \"./LineItem\";\n\nconst CLIENT_ID = \"YCUSnajluQMAHR32DnJhupUYJddjZQ\";\nconst REDIRECT_URI = \"https://tomcheng.github.io/allocation-reports\";\n\nconst TAX_RATE = 20;\n\ninitializeAPI();\n\nconst Container = styled.div`\n  padding: 20px 30px;\n`;\n\nconst Options = styled.div`\n  text-align: right;\n`;\n\nconst Total = styled.h1`\n  text-align: center;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nconst App = () => {\n  const [isPostTax, setIsPostTax] = useLocalStorage(\"__port-post-tax__\", true);\n  const [accounts, setAccounts] = useLocalStorage(\"__port-accounts__\", null);\n  const [balances, setBalances] = useLocalStorage(\"__port-balances__\", {});\n  const [positions, setPositions] = useLocalStorage(\"__port-positions__\", {});\n  const [symbols, setSymbols] = useLocalStorage(\"__port-symbols__\", {});\n  const [quotes, setQuotes] = useLocalStorage(\"__port-quotes__\", {});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { accounts, balances, positions } = await getAccounts();\n\n      const symbolIDs = uniq(\n        flatten(Object.values(positions)).map(position => position.symbolId)\n      );\n\n      const { symbols, quotes } = await getSymbols(symbolIDs);\n\n      setSymbols(symbols);\n      setQuotes(quotes);\n      setPositions(positions);\n      setBalances(balances);\n      setAccounts(accounts);\n    };\n\n    if (!accounts) {\n      fetchData();\n    }\n  }, []);\n\n  if (!accounts) {\n    return (\n      <a\n        href={`https://login.questrade.com/oauth2/authorize?client_id=${CLIENT_ID}&response_type=token&redirect_uri=${REDIRECT_URI}`}\n      >\n        Authorize\n      </a>\n    );\n  }\n\n  const togglePostTax = () => {\n    setIsPostTax(!isPostTax);\n  };\n\n  const rrspAccountNumbers = accounts\n    .filter(account => account.type === \"RRSP\")\n    .map(account => account.number);\n  const rrspPositions = flatMap(\n    Object.values(pickBy(positions, (v, k) => rrspAccountNumbers.includes(k)))\n  );\n  const nonRrspPositions = flatMap(\n    Object.values(omitBy(positions, (v, k) => rrspAccountNumbers.includes(k)))\n  );\n  const rrspBalances = Object.values(\n    pickBy(balances, (v, k) => rrspAccountNumbers.includes(k))\n  );\n  const nonRrspBalances = Object.values(\n    omitBy(balances, (v, k) => rrspAccountNumbers.includes(k))\n  );\n\n  const postTaxAdjustment = isPostTax ? 1 - TAX_RATE / 100 : 1;\n\n  const rrspStocks =\n    sumBy(\n      rrspPositions,\n      position =>\n        position.currentMarketValue * BREAKDOWNS[position.symbol].stocks\n    ) * postTaxAdjustment;\n  const nonRrspStocks = sumBy(\n    nonRrspPositions,\n    position => position.currentMarketValue * BREAKDOWNS[position.symbol].stocks\n  );\n  const rrspBonds =\n    sumBy(\n      rrspPositions,\n      position =>\n        position.currentMarketValue * BREAKDOWNS[position.symbol].bonds\n    ) * postTaxAdjustment;\n  const nonRrspBonds = sumBy(\n    nonRrspPositions,\n    position => position.currentMarketValue * BREAKDOWNS[position.symbol].bonds\n  );\n  const rrspCash = sumBy(rrspBalances, \"cash\") * postTaxAdjustment;\n  const nonRrspCash = sumBy(nonRrspBalances, \"cash\");\n  const overallTotal =\n    rrspStocks +\n    nonRrspStocks +\n    rrspBonds +\n    nonRrspBonds +\n    rrspCash +\n    nonRrspCash;\n\n  return (\n    <Container>\n      <Options>\n        <label>\n          <input type=\"checkbox\" checked={isPostTax} onChange={togglePostTax} />{\" \"}\n          Adjust for post tax amounts\n        </label>\n      </Options>\n      <Total>{formatMoney(overallTotal)}</Total>\n      <Subheading>Accounts</Subheading>\n      {accounts.map(account => (\n        <LineItem\n          key={account.number}\n          label={account.type}\n          amount={\n            balances[account.number].totalEquity *\n            (account.type === \"RRSP\" ? postTaxAdjustment : 1)\n          }\n          total={overallTotal}\n        />\n      ))}\n      <Subheading>Asset Classes</Subheading>\n      <LineItem\n        label=\"Stocks\"\n        amount={rrspStocks + nonRrspStocks}\n        total={overallTotal}\n      />\n      <LineItem\n        label=\"Bonds\"\n        amount={rrspBonds + nonRrspBonds}\n        total={overallTotal}\n      />\n      <LineItem\n        label=\"Cash\"\n        amount={rrspCash + nonRrspCash}\n        total={overallTotal}\n      />\n      {accounts.map(account => (\n        <Account\n          key={account.number}\n          account={account}\n          balance={balances[account.number]}\n          positions={positions[account.number]}\n          postTaxAdjustment={account.type === \"RRSP\" ? postTaxAdjustment : 1}\n          symbols={symbols}\n          quotes={quotes}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}